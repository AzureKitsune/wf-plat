{"version":3,"sources":["CurrencyItem.js","App.js","index.js"],"names":["CurrencyItem","props","state","currency","currency_value","update","bind","update_callback","value","platinum_value","this","setState","toFixed","id","currency_symbol","React","Component","App","entered_platinum","currency_funcs","updatePlatinum","setUpdateFunction","Object","entries","func","funcs","className","href","type","placeholder","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"mTA0CeA,G,wBAtCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,SAAU,EAAKF,MAAME,SACrBC,eAAgB,GAGpB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAGd,EAAKL,MAAMM,gBAAgB,EAAKL,MAAMC,SAAU,SAACK,GAAD,OAAW,EAAKH,OAAOG,KAVxD,E,oEAaZC,GAEH,OAAOC,KAAKR,MAAMC,UACd,IAAK,MAEDO,KAAKC,SAAS,CAACP,gBAAkC,KAAjBK,GAAwBG,QAAQ,KAChE,MACJ,IAAK,MAEDF,KAAKC,SAAS,CAACP,gBAAkC,KAAjBK,GAAwBG,QAAQ,Q,6BAOrEX,GACH,OACI,yBAAKY,GAAG,yBACJ,0BAAMA,GAAG,iBAAiBH,KAAKR,MAAMC,SAArC,KAAiDO,KAAKT,MAAMa,gBAAiBJ,KAAKR,MAAME,qB,GAjC7EW,IAAMC,YC4ElBC,E,YA1Eb,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXgB,iBAAkB,EAClBC,eAAgB,IAIlB,EAAKC,eAAiB,EAAKA,eAAed,KAApB,gBACtB,EAAKe,kBAAoB,EAAKA,kBAAkBf,KAAvB,gBATR,E,4EAWJE,GAEbE,KAAKC,SAAS,CAACO,iBAAkBV,IAGjC,IAAI,IAAJ,MAAuBc,OAAOC,QAAQb,KAAKR,MAAMiB,gBAAjD,eAAkE,CAAC,IAAD,gCAChEK,EADgE,MAC3DhB,M,wCAGSL,EAAUqB,GAI1B,IAAIC,EAAQf,KAAKR,MAAMiB,eACvBM,EAAMtB,GAAYqB,EAClBd,KAAKC,SAAS,CAACQ,eAAgBM,M,6BAE1BxB,GAAQ,IAAD,OACZ,OACE,yBAAKyB,UAAU,OACb,4BAAQA,UAAU,cAChB,wCAAa,uBAAGC,KAAK,6CAAR,YAAb,0BACA,6BAEE,gDACA,2BAAOC,KAAK,SAASf,GAAG,iBACxBgB,YAAY,wBACZC,SAAU,SAACC,GAAD,OAAO,EAAKX,eAAeW,EAAEC,OAAOxB,UAE9C,6BAEA,yCAEA,yBAAKK,GAAG,sBACN,kBAAC,EAAD,CAAcV,SAAS,MAAMW,gBAAgB,IAC3CV,eAAgBM,KAAKR,MAAMgB,iBAC3BX,gBAAiBG,KAAKW,oBACxB,kBAAC,EAAD,CAAclB,SAAS,MAAMW,gBAAgB,OAC3CV,eAAgBM,KAAKR,MAAMgB,iBAC3BX,gBAAiBG,KAAKW,qBAG1B,kDACA,+BACE,4BACE,wCACA,iCACA,qCAEF,4BACE,kCACA,oCACA,sC,GAhEEN,IAAMC,WCCxBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.438f7a25.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CurrencyItem.css';\r\n\r\nclass CurrencyItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currency: this.props.currency,\r\n            currency_value: 0\r\n        };\r\n\r\n        this.update = this.update.bind(this);\r\n\r\n        //gives the update function back to the parent App component for usage.\r\n        this.props.update_callback(this.state.currency, (value) => this.update(value));\r\n    }\r\n\r\n    update(platinum_value) {\r\n        //usd and gbp from https://warframe.fandom.com/wiki/Platinum\r\n        switch(this.state.currency) {\r\n            case 'USD':\r\n                //1 platinum == 0.067 (dollars, or 6.7 cents)\r\n                this.setState({currency_value: (platinum_value * 0.067).toFixed(2)});\r\n                break;\r\n            case 'GBP':\r\n                //1 platinum == 0.057 (pounds, or 5.7 pence)\r\n                this.setState({currency_value: (platinum_value * 0.057).toFixed(2)});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render(props) {\r\n        return (\r\n            <div id='currency-item-wrapper'>\r\n                <span id='currency-item'>{this.state.currency}: {this.props.currency_symbol}{this.state.currency_value}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrencyItem;","import React from 'react';\nimport './App.css';\nimport CurrencyItem from './CurrencyItem.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entered_platinum: 0,\n      currency_funcs: {}\n    };\n\n    //https://stackoverflow.com/a/36683831\n    this.updatePlatinum = this.updatePlatinum.bind(this);\n    this.setUpdateFunction = this.setUpdateFunction.bind(this);\n  }\n  updatePlatinum(value) {\n    //Sets the entered amount of platinum into this component's state.\n    this.setState({entered_platinum: value});\n\n    //Calls the update functions for every CurrencyItem component with the new platinum value.\n    for(let [key, func] of Object.entries(this.state.currency_funcs)) {\n      func(value);\n    }\n  }\n  setUpdateFunction(currency, func) {\n    /* This function gets called by the CurrencyItem components\n       to register their own update function with this App component.\n       The update functions get called in the updatePlatinum function above. */\n    var funcs = this.state.currency_funcs;\n    funcs[currency] = func;\n    this.setState({currency_funcs: funcs});\n  }\n  render(props) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Warframe <a href='https://warframe.fandom.com/wiki/Platinum'>Platinum</a> to Currency Converter</h1>\n          <div>\n\n            <h2>Platinum Amount:</h2>\n            <input type='number' id='platinum-input' \n            placeholder='Enter platinum amount'\n            onChange={(e) => this.updatePlatinum(e.target.value)} />\n\n            <hr />\n\n            <h2>Currency:</h2>\n\n            <div id='currency-container'>\n              <CurrencyItem currency='USD' currency_symbol='$' \n                currency_value={this.state.entered_platinum} \n                update_callback={this.setUpdateFunction} />\n              <CurrencyItem currency='GBP' currency_symbol='£' \n                currency_value={this.state.entered_platinum} \n                update_callback={this.setUpdateFunction} />\n            </div>\n\n            <h3>Common Conversions</h3>\n            <table>\n              <tr>\n                <th>Platinum</th>\n                <th>$</th>\n                <th>£</th>\n              </tr>\n              <tr>\n                <td>75</td>\n                <td>$5.0</td>\n                <td></td>\n              </tr>\n            </table>\n\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}